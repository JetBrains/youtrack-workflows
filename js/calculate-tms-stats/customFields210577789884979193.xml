<instance>
    <bundle restPath="/admin/customfield/bundle/">
        <values>
            <value>Show-stopper</value>
            <value>mynewvalue</value>
            <value>Critical</value>
            <value>Major</value>
            <value>Normal</value>
            <value>Minor</value>
        </values>
        <name>36-1-1518004329094</name>
    </bundle>
    <bundle restPath="/admin/customfield/stateBundle/">
        <values>
            <value>Backlog</value>
            <value>Copyrighting</value>
            <value>Design</value>
            <value>Layout</value>
            <value>Testing</value>
            <value>Staging</value>
            <value>Done</value>
            <value>Documentation</value>
        </values>
        <name>888c30a9-4f31-4f55-b836-39a1b7eee885</name>
    </bundle>
    <bundle restPath="/admin/customfield/bundle/">
        <values>
            <value>Minor</value>
            <value>Normal</value>
            <value>Major</value>
            <value>Critical</value>
            <value>Show-stopper</value>
        </values>
        <name>Priorities</name>
    </bundle>
    <bundle restPath="/admin/customfield/stateBundle/">
        <values>
            <value>Submitted</value>
            <value>Open</value>
            <value>In Progress</value>
            <value>To be discussed</value>
            <value>Reopened</value>
            <value>Can't Reproduce</value>
            <value>Duplicate</value>
            <value>Fixed</value>
            <value>Won't fix</value>
            <value>Incomplete</value>
            <value>Obsolete</value>
            <value>Verified</value>
            <value>Backlog</value>
            <value>Scoping</value>
            <value>Working</value>
            <value>Blocked</value>
            <value>On Hold</value>
            <value>Review</value>
            <value>QA</value>
            <value>Supporting</value>
            <value>Pending Release</value>
            <value>Monitoring</value>
            <value>Done</value>
            <value>Archive</value>
        </values>
        <name>States</name>
    </bundle>
    <bundle restPath="/admin/customfield/bundle/">
        <values>
            <value>Bug</value>
            <value>Exception</value>
            <value>Feature</value>
            <value>Task</value>
            <value>Usability Problem</value>
            <value>Performance Problem</value>
            <value>Epic</value>
            <value>Meta Issue</value>
            <value>Auto-reported exception</value>
            <value>MS</value>
            <value>CSS</value>
            <value>PLAYGROUND</value>
            <value>New State</value>
            <value>4545</value>
        </values>
        <name>Types</name>
    </bundle>
    <bundle restPath="/admin/customfield/versionBundle/">
        <values>
            <value>0.1</value>
            <value>0.2</value>
            <value>1.0</value>
            <value>1.2</value>
            <value>1.3</value>
        </values>
        <name>Versions</name>
    </bundle>
    <bundle restPath="/admin/customfield/stateBundle/">
        <values/>
        <name>c80d6082-a0a2-4f06-9329-2a6283cd1d37</name>
    </bundle>
    <bundle restPath="/admin/customfield/stateBundle/">
        <values>
            <value>Submitted</value>
            <value>Open</value>
            <value>In Progress</value>
            <value>To be discussed</value>
            <value>Reopened</value>
            <value>Can't Reproduce</value>
            <value>Duplicate</value>
            <value>Fixed</value>
            <value>Won't fix</value>
            <value>Incomplete</value>
            <value>Obsolete</value>
            <value>Verified</value>
            <value>New</value>
            <value>Done</value>
            <value>Closed</value>
            <value>Resolved</value>
            <value>rttrrt</value>
            <value>On Review</value>
            <value>Reviewed</value>
            <value>In Implementing</value>
            <value>Implemented</value>
            <value>To be Reviewed</value>
        </values>
        <name>Состояния</name>
    </bundle>
    <type xsi:type="primitiveType" name="blob" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="primitiveType" name="boolean" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="primitiveType" name="dateTime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="primitiveType" name="float" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="primitiveType" name="instant" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="primitiveType" name="int" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="primitiveType" name="long" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="primitiveType" name="period" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="primitiveType" name="string" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="primitiveType" name="text" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="primitiveType" name="void" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="AbstractVcsItem" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members xsi:type="Field" readOnly="true" name="branch" since="2018.1.38923">
            <description>The name of the branch that the VCS change was committed to.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="text" since="2018.1.38923">
            <description>The commit message or pull request description that was provided when the change was applied to the VCS.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="user" since="2018.1.38923">
            <description>The user who authored the VCS change.</description>
            <typeRef type="User">
                <cardinality name="0..1"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="userName" since="2018.1.38923">
            <description>The name of the change author, as returned by the VCS.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <description>Represents VCS-related items such as commits and pull requests.</description>
    </type>
    <type xsi:type="class" name="Agile" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="findSprintByName">
            <description>Finds a specific sprint by name.</description>
        </members>
        <members name="getAuthor">
            <description>The user who created the board.</description>
        </members>
        <members name="getIssueSprints" since="2018.1.39547">
            <description>Returns the sprints that an issue is assigned to on an agile board.</description>
        </members>
        <members name="findByName">
            <description>Returns a set of agile boards that have the specified name.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="creator">
            <description>TODO documentation missing</description>
            <typeRef type="User">
                <cardinality name="1"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="name">
            <description>The name of the agile board.</description>
            <typeRef type="string">
                <cardinality name="1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="sprints">
            <description>The set of sprints that are associated with the board.</description>
            <typeRef type="Sprint">
                <cardinality name="0..*"/>
                <myTypeName>Sprint</myTypeName>
            </typeRef>
        </members>
        <description>Represents an agile board and the set of sprints that belong to the board.</description>
    </type>
    <type xsi:type="class" name="ArticleAttachment" superClass="BaseArticleAttachment" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="ArticleDraftAttachment" superClass="BaseArticleAttachment" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="AttachmentThumbnail" superClass="PersistentFile" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="BaseArticleAttachment" superClass="BaseAttachment" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="BaseAttachment" superClass="PersistentFile" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="BaseComment" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members xsi:type="Field" readOnly="true" name="attachments" since="2018.1.40030">
            <description>The set of attachments that are attached to the comment.</description>
            <typeRef type="IssueAttachment">
                <cardinality name="0..*"/>
                <myTypeName>IssueAttachment</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="created">
            <description>TODO documentation missing</description>
            <typeRef type="long">
                <cardinality name="1"/>
                <myTypeName>long</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="isUsingMarkdown" since="2017.4.38870">
            <description>When `true`, the comment text is parsed as Markdown. When `false`, the comment text is parsed as YouTrack Wiki.
Changing this value does not transform the markup from one syntax to another.</description>
            <typeRef type="boolean">
                <cardinality name="1"/>
                <myTypeName>boolean</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="text">
            <description>TODO documentation missing</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="updated">
            <description>TODO documentation missing</description>
            <typeRef type="long">
                <cardinality name="1"/>
                <myTypeName>long</myTypeName>
            </typeRef>
        </members>
        <description>The base class for issue comment.</description>
    </type>
    <type xsi:type="class" name="BaseWorkItem" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="isUsingMarkdown" since="2017.4.38870">
            <description>When `true`, the work item description is parsed as Markdown. When `false`, the work item description is parsed as YouTrack Wiki.
Changing this value does not transform the markup from one syntax to another.</description>
        </members>
        <members name="setUsingMarkdown">
            <description>TODO documentation missing</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="author">
            <description>The user to whom the work is attributed in the work item.</description>
            <typeRef type="User">
                <cardinality name="1"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="created">
            <description>The date when the work item was created.</description>
            <typeRef type="instant">
                <cardinality name="1"/>
                <myTypeName>instant</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="creator">
            <description>The user who added the work item to the issue.</description>
            <typeRef type="User">
                <cardinality name="1"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="description">
            <description>The work item description.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="type">
            <description>The work item type.
 Writable since 2020.2</description>
            <typeRef type="WorkItemType">
                <cardinality name="0..1"/>
                <myTypeName>WorkItemType</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="updated">
            <description>The date when the work item was last updated.</description>
            <typeRef type="instant">
                <cardinality name="0..1"/>
                <myTypeName>instant</myTypeName>
            </typeRef>
        </members>
        <description>The base class for issue work items.</description>
    </type>
    <type xsi:type="class" name="BitBucketChangesProcessor" superClass="GithubCloneChangesProcessor" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="BitBucketServer" superClass="GithubCloneServer" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="BitBucketStandaloneServer" superClass="GithubCloneServer" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="BitbucketStandaloneChangesProcessor" superClass="GithubCloneChangesProcessor" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="Build" superClass="Field" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="getFieldType">
            <description>Field type. Used when defining rule requirements.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="assembleDate">
            <description>The date and time when the build was assembled.</description>
            <typeRef type="long">
                <cardinality name="0..1"/>
                <myTypeName>long</myTypeName>
            </typeRef>
        </members>
        <description>Represents a value that is stored in a custom field that stores a build type.</description>
    </type>
    <type xsi:type="class" name="BundleProjectCustomField" superClass="ProjectCustomField" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="createValue" since="2018.2.45017">
            <description>Adds a value to the set of values for the custom field. If a value with the specified name already exists in the set, an exception is thrown.</description>
        </members>
        <members name="findValueByName">
            <description>Returns a value with the specified name in the set of values for a custom field.</description>
        </members>
        <members name="findValueByOrdinal">
            <description>Returns a value that is assigned a specified position in the set of values for a custom field.</description>
        </members>
        <members name="getValues">
            <description>The list of available values for the custom field.</description>
        </members>
        <description>Represents a custom field in a project that stores an predefined set of values.</description>
    </type>
    <type xsi:type="class" name="ChangesProcessor" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="getPullRequests" since="2020.3">
            <description>The list of pull requests that are associated with the changes processor.</description>
        </members>
        <members name="getVcsChanges" since="2020.3">
            <description>The list of commits that are associated with the changes processor.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="server" since="2018.1.38923">
            <description>The VCS server that the processor connects to.</description>
            <typeRef type="VcsServer">
                <cardinality name="1"/>
                <myTypeName>VcsServer</myTypeName>
            </typeRef>
        </members>
        <description>An entity that retrieves VCS changes and creates their representation in YouTrack.</description>
    </type>
    <type xsi:type="class" name="CustomFieldsUser" superClass="SuperUser" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="DatabaseBackupError" superClass="PersistentFile" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="DeletedUser" superClass="SystemUser" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="DraftComment" superClass="BaseComment" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="DraftWorkItem" superClass="BaseWorkItem" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="EnumField" superClass="LocalizableField" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="getFieldType">
            <description>Field type. Used when defining rule requirements.</description>
        </members>
        <description>Represents a value in a custom field that stores a predefined set of values.</description>
    </type>
    <type xsi:type="class" name="ExternalServiceUser" superClass="SuperUser" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="Field" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="getBackgroundColor">
            <description>The background color of the value in the custom field as it is displayed in YouTrack.</description>
        </members>
        <members name="getForegroundColor">
            <description>The foreground color of the value in the custom field as it is displayed in YouTrack.</description>
        </members>
        <members name="getPresentation">
            <description>String representation of the value.</description>
        </members>
        <members name="isArchived">
            <description>If the value is archived, this property is `true`.</description>
        </members>
        <members name="getDateTimeType">
            <description>Date and time field type. Used when defining rule requirements.</description>
        </members>
        <members name="getDateType">
            <description>Date field type. Used when defining rule requirements.</description>
        </members>
        <members name="getFloatType">
            <description>Float field type. Used when defining rule requirements.</description>
        </members>
        <members name="getIntegerType">
            <description>Integer field type. Used when defining rule requirements.</description>
        </members>
        <members name="getPeriodType">
            <description>Period field type. Used when defining rule requirements.</description>
        </members>
        <members name="getStringType">
            <description>String field type. Used when defining rule requirements.</description>
        </members>
        <members name="getTextType">
            <description>Text field type. Used when defining rule requirements.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="colorIndex">
            <description>The index value of the color that is assigned to the value in the custom field.</description>
            <typeRef type="int">
                <cardinality name="1"/>
                <myTypeName>int</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="description">
            <description>The description of the value as visible in the administrative UI for custom fields.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="name">
            <description>The name of the value, which is also stored as the value in the custom field.</description>
            <typeRef type="string">
                <cardinality name="1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="ordinal">
            <description>The position of the value in the set of values for the custom field.</description>
            <typeRef type="int">
                <cardinality name="1"/>
                <myTypeName>int</myTypeName>
            </typeRef>
        </members>
        <description>Represents a value that is stored in a custom field.
The custom fields themselves are represented by the Fields class.</description>
    </type>
    <type xsi:type="class" name="GitHostingIntegration" superClass="SuperUser" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="GitLabChangesProcessor" superClass="GithubCloneChangesProcessor" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="GitLabServer" superClass="GithubCloneServer" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="GiteaChangesProcessor" superClass="GogsChangesProcessor" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="GiteaServer" superClass="GithubCloneServer" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="GithubCloneChangesProcessor" superClass="ChangesProcessor" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="GithubCloneServer" superClass="VcsServer" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="GithubRepo" superClass="GithubCloneChangesProcessor" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="GithubServer" superClass="GithubCloneServer" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="GogsChangesProcessor" superClass="GithubCloneChangesProcessor" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="GogsServer" superClass="GithubCloneServer" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="GroupProjectCustomField" superClass="ProjectCustomField" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="findValueByName">
            <description>Returns the value that matches the specified name in a custom field that stores values as a user group.</description>
        </members>
        <members name="getValues">
            <description>The list of available values for the custom field.</description>
        </members>
        <description>Represents a custom field in a project that stores a UserGroup type.</description>
    </type>
    <type xsi:type="class" name="ImportUser" superClass="SuperUser" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="Issue" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="Issue">
            <description>TODO documentation missing</description>
        </members>
        <members name="addAttachment" since="2019.2.53994">
            <description>Attaches a file to the issue.
Makes `issue.attachments.isChanged` return `true` for the current transaction.</description>
        </members>
        <members name="addComment">
            <description>Adds a comment to the issue.
Makes `issue.comments.isChanged` return `true` for the current transaction.</description>
        </members>
        <members name="addHttpFormField">
            <description>TODO documentation missing</description>
        </members>
        <members name="addHttpHeader">
            <description>TODO documentation missing</description>
        </members>
        <members name="addHttpRequestUrlParameter">
            <description>TODO documentation missing</description>
        </members>
        <members name="addTag">
            <description>Adds a tag with the specified name to an issue. YouTrack adds the first matching tag that is visible to the current user.
If a match is not found, a new private tag is created for the current user.
When you use this method to add the star tag to an issue, the current user is added to the list of watchers.
To add a tag that is not visible to the current user, use the applyCommand method instead.
Use "add tag [tagName]" for the command parameter and specify the login for the owner of the tag in the runAs parameter.
@example
issue.addTag('doit');</description>
        </members>
        <members name="addWorkItem">
            <description>Adds a work item to the issue.</description>
        </members>
        <members name="applyCommand">
            <description>Applies a command to the issue.</description>
        </members>
        <members name="becomesReported">
            <description>If the issue becomes reported in the current transaction, this property is `true`.
@example
if (issue.fields.Subsystem !== null &amp;&amp; issue.fields.Assignee === null &amp;&amp;
    (((issue.isChanged('Subsystem') || issue.isChanged('project') &amp;&amp; issue.isReported) ||
        issue.becomesReported) {
    issue.fields.Assignee = issue.fields.Subsystem.owner
}</description>
        </members>
        <members name="becomesResolved">
            <description>If the issue is assigned a state that is considered resolved in the current transaction, this property is `true`.</description>
        </members>
        <members name="becomesUnresolved">
            <description>If the issue is assigned a state that is considered unresolved in the current transaction. this property is `true`.</description>
        </members>
        <members name="clearAttachments">
            <description>Removes all of the attachments from the issue.</description>
        </members>
        <members name="copy">
            <description>Creates a copy of the issue.</description>
        </members>
        <members name="doHttpDelete">
            <description>TODO documentation missing</description>
        </members>
        <members name="doHttpGet">
            <description>TODO documentation missing</description>
        </members>
        <members name="doHttpPost">
            <description>TODO documentation missing</description>
        </members>
        <members name="doHttpPut">
            <description>TODO documentation missing</description>
        </members>
        <members name="getDuplicateRoot">
            <description>The root issue in a tree of duplicates that are linked to the issue.
For example, if `issueA` duplicates `issueB` and `issueB` duplicates
`issueC`, then the value for the `issueA.duplicateRoot()` property is `issueC`.</description>
        </members>
        <members name="getEditedComments">
            <description>The set of comments that are edited in the current transaction.
Comments that are added and removed are not considered to be edited.
Instead, these are represented by the `issue.comments.added` and `issue.comments.removed` properties.</description>
        </members>
        <members name="getEditedWorkItems" since="2017.4.37824">
            <description>The set of work items that are edited in the current transaction.
Work items that are added and removed are not considered to be edited.
Instead, these are represented by the `issue.workItems.added` and
`issue.workItems.removed` properties.</description>
        </members>
        <members name="getExternalId" since="2018.2.42312">
            <description>The visible ID of an issue or similar object in an originating third-party system.</description>
        </members>
        <members name="getExternalUrl" since="2018.2.42312">
            <description>The URL for an issue or similar object in an originating third-party system.</description>
        </members>
        <members name="getId">
            <description>The issue ID.
@example
user.notify('Issue is overdue', 'Please, look at the issue: ' + issue.id);</description>
        </members>
        <members name="getNotificationEmail">
            <description>The email address that is used to send notifications for the project. If a 'From' address is not set for the project, the default 'From' address for the YouTrack server is returned.</description>
        </members>
        <members name="getPeriodFieldOldValueInMinutes">
            <description>TODO documentation missing</description>
        </members>
        <members name="getPeriodFieldValueInMinutes">
            <description>TODO documentation missing</description>
        </members>
        <members name="getPullRequests" since="2020.3">
            <description>The list of pull requests that are associated with the issue.</description>
        </members>
        <members name="getUrl">
            <description>The absolute URL that points to the issue.
@example
user.notify('Issue is overdue', 'Please, look at the issue: ' + issue.url);</description>
        </members>
        <members name="getVcsChanges" since="2018.1.38923">
            <description>The list of commits that are associated with the issue.</description>
        </members>
        <members name="getWorkItems">
            <description>The set of work items that have been added to the issue.</description>
        </members>
        <members name="hasTag">
            <description>Checks whether the specified tag is attached to an issue.</description>
        </members>
        <members name="isReported">
            <description>If the issue is already reported or becomes reported in the current transaction, this property is `true`. To apply changes to an issue draft, use `!issue.isReported`.
@example
issue.links['depends on'].forEach(function(dep) {
  if (dep.isReported) {
    assert(dep.State.resolved, 'The issue has unresolved dependencies and thus cannot be set Fixed!');
  }
});</description>
        </members>
        <members name="isResolved">
            <description>If the issue is currently assigned a state that is considered resolved, this property is `true`.</description>
        </members>
        <members name="isStarred">
            <description>If the current user has added the star tag to watch the issue, this property is `true`.</description>
        </members>
        <members name="isUsingMarkdown">
            <description>TODO documentation missing</description>
        </members>
        <members name="isVisibleTo">
            <description>Checks whether the issue is accessible by specified user.</description>
        </members>
        <members name="removeTag">
            <description>Removes a tag with the specified name from an issue. If the specified tag is not attached to the issue, an exception is thrown.
This method first searches through tags owned by the current user, then through all other visible tags.
To remove a tag that is not visible to the current user, use the applyCommand method instead.
Use "remove tag [tagName]" for the command parameter and specify the login for the owner of the tag in the runAs parameter.
@example
issue.removeTag('waiting for reply');</description>
        </members>
        <members name="sendMail">
            <description>TODO documentation missing</description>
        </members>
        <members name="sendMail">
            <description>TODO documentation missing</description>
        </members>
        <members name="sendMail">
            <description>TODO documentation missing</description>
        </members>
        <members name="setPeriodFieldValueInMinutes">
            <description>TODO documentation missing</description>
        </members>
        <members name="setUsingMarkdown">
            <description>TODO documentation missing</description>
        </members>
        <members name="wikify">
            <description>Converts text with Markdown or YouTrack Wiki markup to HTML. Use this method to send "pretty" notifications.
@example
issue.Assignee.notify('Comment added:', issue.wikify(comment.text, comment.isUsingMarkdown));</description>
        </members>
        <members name="action">
            <description>Creates a declaration of a rule that a user can apply to one or more issues with a command or menu option.
The object that is returned by this method is normally exported to the `rule` property, otherwise it is not treated as a rule.
@example
var entities = require('@jetbrains/youtrack-scripting-api/entities');
exports.rule = entities.Issue.action({
  title: 'Log comments',
  command: 'log',
  guard: function(ctx) {
    return ctx.issue.isReported;
  },
  action: function(ctx) {
    ctx.issue.comments.forEach(function(comment) {
      console.log(comment.text);
    });
  }
});
@param {Object} ruleProperties A JSON object that defines the properties for the rule.
@param {string} ruleProperties.title The human-readable name of the rule. Displayed in the administrative UI in YouTrack.
@param {string} ruleProperties.command The custom command that triggers the action.
@param {Issue~guardFunction} ruleProperties.guard A function that is invoked to determine whether the action is applicable to an issue.
@param {Issue~actionFunction} ruleProperties.action The function that is invoked when a user triggers this action.
@param {Requirements} ruleProperties.requirements The set of entities that must be present for the script to work as expected.</description>
        </members>
        <members name="findById">
            <description>Finds an issue by its visible ID.</description>
        </members>
        <members name="onChange">
            <description>Creates a declaration of a rule that is triggered when a change is applied to an issue.
The object that is returned by this method is normally exported to the `rule` property, otherwise it is not treated as a rule.
@example
var entities = require('@jetbrains/youtrack-scripting-api/entities');
exports.rule = entities.Issue.onChange({
  title: 'On issue change, log its id',
  action: function(ctx) {
    console.log(ctx.issue.id);
  }
});
@param {Object} ruleProperties A JSON object that defines the properties for the rule.
@param {string} ruleProperties.title The human-readable name of the rule. Displayed in the administrative UI in YouTrack.
@param {Issue~actionFunction} ruleProperties.action The function that is invoked on issue change.
@param {Requirements} ruleProperties.requirements The set of entities that must be present for the script to work as expected.
@param {Object} [ruleProperties.runOn] Determines which issue events trigger the on-change rule. When not specified, the rule is triggered on issue change.
@param {boolean} [ruleProperties.runOn.change] When `true`, the rule is triggered on issue change.
@param {boolean} [ruleProperties.runOn.removal] When `true`, the rule is triggered when an issue is logically deleted.</description>
        </members>
        <members name="onSchedule">
            <description>Creates a declaration of a rule that is triggered on a set schedule.
The object that is returned by this method is normally exported to the `rule` property, otherwise it is not treated as a rule.
@example
var entities = require('@jetbrains/youtrack-scripting-api/entities');
exports.rule = entities.Issue.onSchedule({
  title: 'Log id of major issues every 5 seconds',
  search: '#Major',
  cron: '0/5 * * * * ?',
  action: function(ctx) {
    console.log(ctx.issue.id);
  }
});
@param {Object} ruleProperties A JSON object that defines the properties for the rule.
@param {string} [ruleProperties.title] The human-readable name of the rule. Displayed in the administrative UI in YouTrack.
@param {string|function} ruleProperties.search A YouTrack search string or a function with no parameters that returns such a string.
The specified action is applied to all issues that match the search and belong to the project that this rule is attached to.
@param {string} ruleProperties.cron A cron expression that specifies the interval for applying the rule.
@param {boolean} [ruleProperties.muteUpdateNotifications] `true` if no notifications should be sent on changes made by this rule or any rule that reacted on a change made by this rule.
@param {Issue~actionFunction} ruleProperties.action The function that is invoked on schedule for each issue that matches the search.
@param {Requirements} ruleProperties.requirements The set of entities that must be present for the script to work as expected.</description>
        </members>
        <members name="stateMachine">
            <description>Creates a declaration of a state-machine rule. The state-machine imposes restrictions for the transitions between values in a custom field.
You can execute actions when the custom field is set to a value, changes from a value, or transitions from two specific values.
The object that is returned by this method is normally exported to the `rule` property, otherwise it is not treated as a rule.
@example
var entities = require('@jetbrains/youtrack-scripting-api/entities');
exports.rule = entities.Issue.stateMachine({
  title: 'Status state-machine',
  fieldName: 'Status',
  states: {
    Open: {
      initial: true,
      transitions: {
        start: {
          targetState: 'In progress'
        }
      }
    },
    'In progress': {
      onEnter: function(ctx) {
        ctx.issue.fields.Assignee = ctx.currentUser;
      },
      transitions: {
        fix: {
          targetState: 'Fixed'
        },
        reopen: {
          targetState: 'Open'
        }
      }
    },
    Fixed: {
      transitions: {
      }
    }
  },
  requirements: {
    Assignee: {
      type: entities.User.fieldType
    }
  }
});
@param {Object} ruleProperties A JSON object that defines the properties for the rule.
@param {string} ruleProperties.title The human-readable name of the rule. Displayed in the administrative UI in YouTrack.
@param {string} [ruleProperties.fieldName] The name of a field that is managed by the state-machine rule. Declare either fieldName or stateFieldName, not both.
@param {string} [ruleProperties.stateFieldName] An alias for ruleProperties.fieldName for building state-machines per issue type. When both stateFieldName and fieldName are declared, an exception is thrown.
@param {Object} [ruleProperties.states] A list of values for a custom field and the possible transitions between them. Declare either states or defaultStateMachine, not both.
@param {Object} [ruleProperties.defaultMachine] An alias for ruleProperties.states for building state-machines per issue type. When both defaultMachine and states are declared, an exception is thrown.
@param {string} [ruleProperties.typeFieldName] The name of a field that defines which state-machine applies to the managed field.
@param {Object} [ruleProperties.alternativeMachines] An object that contains the definitions for one or more state-machines that apply to different types of issues. Object keys are the possible values of the field that is defined by the ruleProperties.typeFieldName. Object values have the same structure that is shown for 'states' in the example.
This parameter is mandatory when the ruleProperties.typeFieldName parameter is specified.
@param {Requirements} ruleProperties.requirements The set of entities that must be present for the script to work as expected.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="attachments">
            <description>The set of attachments that are attached to the issue.</description>
            <typeRef type="IssueAttachment">
                <cardinality name="0..*"/>
                <myTypeName>IssueAttachment</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="boards">
            <description>The collection of boards that this issue has been added to.</description>
            <typeRef type="Sprint">
                <cardinality name="0..*"/>
                <myTypeName>Sprint</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="comments">
            <description>A list of comments for the issue.</description>
            <typeRef type="IssueComment">
                <cardinality name="0..*"/>
                <myTypeName>IssueComment</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="created">
            <description>The date when the issue was created.</description>
            <typeRef type="instant">
                <cardinality name="1"/>
                <myTypeName>instant</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="description">
            <description>The text that is entered as the issue description.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="duplicateCluster">
            <description>TODO documentation missing</description>
            <typeRef type="long">
                <cardinality name="1"/>
                <myTypeName>long</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="isUsingMarkdown" since="2017.4.38870">
            <description>When `true`, the issue description is parsed as Markdown. When `false`, the issue description is parsed as YouTrack Wiki.
Changing this value does not transform the markup from one syntax to another.</description>
            <typeRef type="boolean">
                <cardinality name="1"/>
                <myTypeName>boolean</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="numberInProject">
            <description>The issue number in the project.</description>
            <typeRef type="long">
                <cardinality name="1"/>
                <myTypeName>long</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="permittedGroup">
            <description>The user group for which the issue is visible. If the property contains a null value, the issue is visible to the All Users group.</description>
            <typeRef type="UserGroup">
                <cardinality name="0..1"/>
                <myTypeName>UserGroup</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="permittedGroups">
            <description>The groups for which the issue is visible when the visibility is restricted to multiple groups.</description>
            <typeRef type="UserGroup">
                <cardinality name="0..*"/>
                <myTypeName>UserGroup</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="permittedUsers">
            <description>The list of users for whom the issue is visible.</description>
            <typeRef type="User">
                <cardinality name="0..*"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="project">
            <description>The project to which the issue is assigned.</description>
            <typeRef type="Project">
                <cardinality name="1"/>
                <myTypeName>Project</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="reporter">
            <description>The user who reported (created) the issue.
@example
issue.fields.Assignee = issue.reporter;</description>
            <typeRef type="User">
                <cardinality name="1"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="resolved">
            <description>The date and time when the issue was assigned a state that is considered to be resolved.</description>
            <typeRef type="instant">
                <cardinality name="0..1"/>
                <myTypeName>instant</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="sprints">
            <description>The collection of sprints that this issue has been added to.</description>
            <typeRef type="Sprint">
                <cardinality name="0..*"/>
                <myTypeName>Sprint</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="summary">
            <description>The text that is entered as the issue summary.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="tags">
            <description>The list of tags that are attached to an issue.</description>
            <typeRef type="IssueTag">
                <cardinality name="0..*"/>
                <myTypeName>IssueTag</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="updated">
            <description>The date when the issue was last updated.</description>
            <typeRef type="instant">
                <cardinality name="1"/>
                <myTypeName>instant</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="updatedBy">
            <description>The user who last updated the issue.</description>
            <typeRef type="User">
                <cardinality name="1"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="votes">
            <description>The number of votes for an issue. For vote-related methods, see User.canVoteIssue, User.voteIssue, User.canUnvoteIssue, and User.unvoteIssue.</description>
            <typeRef type="int">
                <cardinality name="1"/>
                <myTypeName>int</myTypeName>
            </typeRef>
        </members>
        <description>Represents an issue in YouTrack.</description>
    </type>
    <type xsi:type="class" name="IssueAttachment" superClass="BaseAttachment" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="delete" since="2018.1.40030">
            <description>Permanently deletes the attachment.</description>
        </members>
        <members name="getContent" since="2019.2.53994">
            <description>The content of the file in binary form.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="author">
            <description>The user who attached the file to the issue.</description>
            <typeRef type="User">
                <cardinality name="0..1"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="created">
            <description>The date and time when the attachment was created as a timestamp.</description>
            <typeRef type="long">
                <cardinality name="1"/>
                <myTypeName>long</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="fileUrl" since="2019.2.56440">
            <description>The URL of the issue attachment.</description>
            <typeRef type="string">
                <cardinality name="1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="isRemoved">
            <description>If the attachment is removed, this property is `true`.</description>
            <typeRef type="boolean">
                <cardinality name="1"/>
                <myTypeName>boolean</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="issue">
            <description>The issue that the file is attached to.</description>
            <typeRef type="Issue">
                <cardinality name="0..1"/>
                <myTypeName>Issue</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="metaData">
            <description>The image dimensions. For image files, the value is rw=_width_&amp;rh=_height_. For non-image files, the value is `empty`.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="permittedGroup">
            <description>The group for which the attachment is visible when the visibility is restricted to a single group.</description>
            <typeRef type="UserGroup">
                <cardinality name="0..1"/>
                <myTypeName>UserGroup</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="permittedGroups">
            <description>The groups for which the issue is visible when the visibility is restricted to multiple groups.</description>
            <typeRef type="UserGroup">
                <cardinality name="0..*"/>
                <myTypeName>UserGroup</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="permittedUsers">
            <description>The list of users for whom the attachment is visible.</description>
            <typeRef type="User">
                <cardinality name="0..*"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="updated">
            <description>The date and time the attachment was last updated as a timestamp.</description>
            <typeRef type="long">
                <cardinality name="1"/>
                <myTypeName>long</myTypeName>
            </typeRef>
        </members>
        <description>Represents a file that is attached to an issue.</description>
    </type>
    <type xsi:type="class" name="IssueComment" superClass="BaseComment" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="delete" since="2018.1.38923">
            <description>Logically deletes the comment. This means that the comment is marked as deleted, but remains in the database.
Users with sufficient permissions can restore the comment or delete the comment permanently from the user interface.
The option to delete comments permanently has not been implemented in this API.</description>
        </members>
        <members name="getUrl">
            <description>The absolute URL (permalink) that points to the comment.
@example
user.notify('Somebody has written something', 'Have a look: ' + comment.url);</description>
        </members>
        <members name="isUsingMarkdown">
            <description>TODO documentation missing</description>
        </members>
        <members name="setUsingMarkdown">
            <description>TODO documentation missing</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="author">
            <description>The user who created the comment.</description>
            <typeRef type="User">
                <cardinality name="1"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="issue">
            <description>The issue the comment belongs to.</description>
            <typeRef type="Issue">
                <cardinality name="1"/>
                <myTypeName>Issue</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="permittedGroup">
            <description>A group who's members are allowed to access the comment.</description>
            <typeRef type="UserGroup">
                <cardinality name="0..1"/>
                <myTypeName>UserGroup</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="permittedGroups">
            <description>Groups whos members are allowed to access the comment.</description>
            <typeRef type="UserGroup">
                <cardinality name="0..*"/>
                <myTypeName>UserGroup</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="permittedUsers">
            <description>Users that are allowed to access the comment.</description>
            <typeRef type="User">
                <cardinality name="0..*"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="updatedBy">
            <description>The user who last updated the comment.</description>
            <typeRef type="User">
                <cardinality name="0..1"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <description>Represents a comment that is added to an issue.</description>
    </type>
    <type xsi:type="class" name="IssueFolder" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="IssueLinkPrototype" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="getInward">
            <description>The inward name of the issue link type.</description>
        </members>
        <members name="getOutward">
            <description>The outward name of the issue link type.</description>
        </members>
        <members name="findByName">
            <description>Finds an issue link type by its name.</description>
        </members>
        <description>Represents an issue link type.</description>
    </type>
    <type xsi:type="class" name="IssueTag" superClass="WatchFolder" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="findByName">
            <description>Finds a list of tags with the specified name. The list only includes tags that are visible to the current user.
The tags that were created by the current user are returned at the top of the list.
"Star" tag is excluded from the results.</description>
        </members>
        <members name="findTagByName">
            <description>Finds the most relevant tag with the specified name that is visible to the current user.
"Star" tag is excluded from the results.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="owner">
            <description>The user who created the tag.</description>
            <typeRef type="User">
                <cardinality name="1"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <description>Represents a tag.</description>
    </type>
    <type xsi:type="class" name="IssueWorkItem" superClass="BaseWorkItem" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="delete" since="2018.2.42312">
            <description>Permanently deletes the work item.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="date">
            <description>The date and time that is assigned to the work item. Stored as a Unix timestamp in UTC. The time part is set to midnight for the current date.</description>
            <typeRef type="instant">
                <cardinality name="1"/>
                <myTypeName>instant</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="false" name="duration">
            <description>The duration of the work item in minutes.
Writable since 2018.1.40800</description>
            <typeRef type="int">
                <cardinality name="1"/>
                <myTypeName>int</myTypeName>
            </typeRef>
        </members>
        <description>Represents a work item that has been added to an issue.</description>
    </type>
    <type xsi:type="class" name="JenkinsChangesProcessor" superClass="ChangesProcessor" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="JenkinsServer" superClass="VcsServer" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="JenkinsUser" superClass="SuperUser" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="LocalizableField" superClass="Field" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>Base class for fields values, that can be localized.</description>
    </type>
    <type xsi:type="class" name="LocalizationControllerUser" superClass="SystemUser" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="LoginChangeHandlerUser" superClass="SuperUser" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="MailboxUser" superClass="SuperUser" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="Organization" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="OwnedField" superClass="Field" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="getFieldType">
            <description>Field type. Used when defining rule requirements.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="owner">
            <description>The user who is associated with the value.</description>
            <typeRef type="User">
                <cardinality name="0..1"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <description>Represents a value in a custom field that has a user associated with it, a so-called owner.</description>
    </type>
    <type xsi:type="class" name="PeriodProjectCustomField" superClass="SimpleProjectCustomField" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>Represents a custom field in a project that stores a value as a period type.
We use org.joda.time.Period as a base class for period values.
While you can read the class documentation at
http://joda-time.sourceforge.net/apidocs/org/joda/time/Period.html,
please note that we support only class members which use the Period class and
primitive types like String and int.
@example
// to convert period to minutes (or other units) use get* methods:
var period = issue.fields.Estimation;
var minutes = !period ? 0 : (period.getMinutes() +
                             60 * (period.getHours() +
                                   8 * period.getDays()));
// to create Period instance, use toPeriod function from date-time module:
issue.fields.Estimation = dateTime.toPeriod(3 * 3600 * 1000); // 3h in ms
issue.fields.Estimation = dateTime.toPeriod('3h'); // short form
issue.fields.Estimation = dateTime.toPeriod('2w4d3h15m'); // full form</description>
    </type>
    <type xsi:type="class" name="PersistentFile" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members xsi:type="Field" readOnly="true" name="charset" since="2019.2.53994">
            <description>The charset type of the file. Only applicable to text files.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="extension">
            <description>The extension that defines the file type.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="mimeType" since="2019.2.53994">
            <description>The MIME type of the file.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="name">
            <description>The name of the file.</description>
            <typeRef type="string">
                <cardinality name="1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="size">
            <description>The size of the attached file in bytes.</description>
            <typeRef type="long">
                <cardinality name="1"/>
                <myTypeName>long</myTypeName>
            </typeRef>
        </members>
        <description>Represents the common ancestor for all persistent files that are available in YouTrack.</description>
    </type>
    <type xsi:type="class" name="PersistentImageFile" superClass="PersistentFile" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="Project" superClass="IssueFolder" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="findFieldByName">
            <description>Returns the custom field in the project with the specified name.</description>
        </members>
        <members name="getChangesProcessors" since="2020.3">
            <description>The list of VCS change processors that are integrated with the project.</description>
        </members>
        <members name="getFields">
            <description>The set of custom fields that are available in the project.</description>
        </members>
        <members name="getKey">
            <description>The ID of the project. Use instead of project.shortName, which is deprecated.</description>
        </members>
        <members name="getName">
            <description>The name of the project.</description>
        </members>
        <members name="getNotificationEmail">
            <description>The email address that is used to send notifications for the project.
If a 'From' address is not set for the project, the default 'From' address for the YouTrack server is returned.
@example
if (issue.becomesReported) {
  var lastRelatedEmails = issue.fields['Last message related emails'];
  if (lastRelatedEmails) {
    lastRelatedEmails.split(' ').forEach(function (email) {
      if (email &amp;&amp; email.equalsIgnoreCase(issue.project.notificationEmail)) {
        var allRelatedEmails = issue.fields['All related emails'];
        if (!allRelatedEmails) {
          issue.fields['All related emails'] = email;
        } else if (!(allRelatedEmails.split(' ').has(email))) {
          issue.fields['All related emails'] = allRelatedEmails + ' ' + email;
        }
      }
    });
    issue.fields['Last message related emails'] = null;
  }
}</description>
        </members>
        <members name="getTeam" since="2017.4.38235">
            <description>A UserGroup object that contains the users and members of groups who are assigned to the project team.</description>
        </members>
        <members name="intervalToWorkingMinutes">
            <description>Gets the number of minutes that occurred during working hours in a specified interval.
For example, if the interval is two days and the number of working hours in a day is set to 8, the result is 2 * 8 * 60 = 960</description>
        </members>
        <members name="isArchived">
            <description>If the project is currently archived, this property is `true`.</description>
        </members>
        <members name="findByKey">
            <description>Finds a project by ID.</description>
        </members>
        <members name="findByName">
            <description>Finds a project by name.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="description">
            <description>The description of the project as shown on the project profile page.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="issues">
            <description>A list of all issues that belong to the project.</description>
            <typeRef type="Issue">
                <cardinality name="0..*"/>
                <myTypeName>Issue</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="leader">
            <description>The user who is set as the project lead.</description>
            <typeRef type="User">
                <cardinality name="1"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="shortName">
            <description>@deprecated, use project.key instead</description>
            <typeRef type="string">
                <cardinality name="1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <description>Represents a YouTrack project.</description>
    </type>
    <type xsi:type="class" name="ProjectCustomField" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="becomesInvisibleInIssue" since="2018.2.42312">
            <description>Checks if the changes that are applied in the current transaction remove the condition to show the custom field.</description>
        </members>
        <members name="becomesVisibleInIssue" since="2018.2.42312">
            <description>Checks if the changes that are applied in the current transaction satisfy the condition to show the custom field.</description>
        </members>
        <members name="getBackgroundColor">
            <description>Returns the background color that is used for this field value in the specified issue.
Can return `null`, `"white"`, or a hex color presentation.</description>
        </members>
        <members name="getForegroundColor">
            <description>Returns the foreground color that is used for this field value in the specified issue.
Can return `null`, `"white"`, or a hex color presentation.</description>
        </members>
        <members name="getLocalizedName">
            <description>The localized name of the field.</description>
        </members>
        <members name="getName">
            <description>The name of the field.</description>
        </members>
        <members name="getValuePresentation">
            <description>Returns the string presentation of the value that is stored in this field in the specified issue.</description>
        </members>
        <members name="isVisibleInIssue" since="2018.2.42312">
            <description>Checks if a field is visible in the issue.

@example
// The following example checks the issue to see whether a conditional field with the name "Related Activity"
// is currently visible, meaning that the conditions for showing the field have been met.
// If so, the value for the field is set to "Attendance"

action: function (ctx) {
  if (ctx.RelatedActivity.isVisibleInIssue(ctx.issue)) {
    ctx.issue.fields.RelatedActivity.add(ctx.RelatedActivity.Attendance);
  }
},
requirements: {
  RelatedActivity: {
    name: 'Related Activity',
    type: entities.EnumField.fieldType,
    multi: true,
    Attendance: {}
  }
}</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="nullValueText">
            <description>The text that is displayed for this field when it is empty.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <description>Represents a custom field that is available in a project.</description>
    </type>
    <type xsi:type="class" name="ProjectVersion" superClass="Field" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="getSprint">
            <description>@deprecated</description>
        </members>
        <members name="isReleased">
            <description>If the version is released, this property is `true`.</description>
        </members>
        <members name="getFieldType">
            <description>Field type. Used when defining rule requirements.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="releaseDate">
            <description>The release date that is associated with the version.</description>
            <typeRef type="instant">
                <cardinality name="0..1"/>
                <myTypeName>instant</myTypeName>
            </typeRef>
        </members>
        <description>Represents a value in a custom field that stores a version type.</description>
    </type>
    <type xsi:type="class" name="PullRequest" superClass="AbstractVcsItem" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="getPreviousState" since="2020.3">
            <description>The previous state of the pull request.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="fetched">
            <description>The date when the pull request was retrieved from the VCS change processor.</description>
            <typeRef type="long">
                <cardinality name="0..1"/>
                <myTypeName>long</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="id">
            <description>A unique identifier.</description>
            <typeRef type="string">
                <cardinality name="1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="processor">
            <description>The processor for VCS changes that transmitted information about the pull request.</description>
            <typeRef type="ChangesProcessor">
                <cardinality name="1"/>
                <myTypeName>ChangesProcessor</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="state">
            <description>The state of the pull request.</description>
            <typeRef type="PullRequestState">
                <cardinality name="1"/>
                <myTypeName>PullRequestState</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="title">
            <description>The title of the pull request.</description>
            <typeRef type="string">
                <cardinality name="1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <description>Represents a pull or merge request that is attached to an issue.</description>
    </type>
    <type xsi:type="class" name="PullRequestState" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members xsi:type="Field" readOnly="true" name="DECLINED">
            <description>The pull request was declined.</description>
            <typeRef type="PullRequestState">
                <cardinality name="1"/>
                <myTypeName>PullRequestState</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="MERGED">
            <description>The pull request was merged.</description>
            <typeRef type="PullRequestState">
                <cardinality name="1"/>
                <myTypeName>PullRequestState</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="OPEN">
            <description>The pull request is open.</description>
            <typeRef type="PullRequestState">
                <cardinality name="1"/>
                <myTypeName>PullRequestState</myTypeName>
            </typeRef>
        </members>
        <members name="getName">
            <description>Name of the pull request state.</description>
        </members>
        <description>Represents a pull request state.</description>
    </type>
    <type xsi:type="class" name="SavedQuery" superClass="WatchFolder" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="getOwner">
            <description>The user who created the saved search.</description>
        </members>
        <members name="findByName">
            <description>Finds a list of saved searches with the specified name. The list only includes saved searches that are visible to the current user.
The saved searches that were created by the current user are returned at the top of the list.</description>
        </members>
        <members name="findQueryByName">
            <description>Finds the most relevant saved search with the specified name that is visible to the current user.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="query">
            <description>The search query.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <description>Represents a saved search.</description>
    </type>
    <type xsi:type="class" name="SearchUser" superClass="SuperUser" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="SimpleProjectCustomField" superClass="ProjectCustomField" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>Base class for custom fields that store simple values like strings and numbers.</description>
    </type>
    <type xsi:type="class" name="Sprint" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="getName">
            <description>The name of the sprint.</description>
        </members>
        <members name="isArchived">
            <description>If the sprint is currently archived, this property is `true`.</description>
        </members>
        <members name="isSwimlane">
            <description>Checks whether the specified issue is represented as a swimlane on the agile board that the sprint belongs to.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="agile">
            <description>The agile board that the sprint belongs to.</description>
            <typeRef type="Agile">
                <cardinality name="1"/>
                <myTypeName>Agile</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="archived">
            <description>TODO documentation missing</description>
            <typeRef type="boolean">
                <cardinality name="1"/>
                <myTypeName>boolean</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="finish">
            <description>The end date of the sprint.</description>
            <typeRef type="instant">
                <cardinality name="0..1"/>
                <myTypeName>instant</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="start">
            <description>The start date of the sprint.</description>
            <typeRef type="instant">
                <cardinality name="0..1"/>
                <myTypeName>instant</myTypeName>
            </typeRef>
        </members>
        <description>Represents a sprint that is associated with an agile board. Each sprint can include issues from one or more projects.</description>
    </type>
    <type xsi:type="class" name="State" superClass="LocalizableField" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="getFieldType">
            <description>Field type. Used when defining rule requirements.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="isResolved">
            <description>If issues in this state are considered to be resolved, ths property is `true`.</description>
            <typeRef type="boolean">
                <cardinality name="1"/>
                <myTypeName>boolean</myTypeName>
            </typeRef>
        </members>
        <description>Represents a value in a custom field that stores a state type.</description>
    </type>
    <type xsi:type="class" name="SuperUser" superClass="User" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="SystemUser" superClass="SuperUser" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="TeamcityBuildConfMapping" superClass="ChangesProcessor" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="TeamcityServer" superClass="VcsServer" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="TeamcityUser" superClass="SuperUser" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="TextProjectCustomField" superClass="SimpleProjectCustomField" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>Represents a custom field that stores a string of characters as text. When displayed in an issue, the text is shown as formatted in Markdown.</description>
    </type>
    <type xsi:type="class" name="UndefinedUser" superClass="SystemUser" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <type xsi:type="class" name="UpsourceChangesProcessor" superClass="ChangesProcessor" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="UpsourceServer" superClass="VcsServer" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <description>$ignore</description>
    </type>
    <type xsi:type="class" name="User" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="canUnvoteIssue">
            <description>Checks whether the user is able to remove their vote from the specified issue.</description>
        </members>
        <members name="canVoteIssue">
            <description>Checks whether the user is able to vote for the specified issue.</description>
        </members>
        <members name="createNewIssue">
            <description>TODO documentation missing</description>
        </members>
        <members name="getAvatarUrl" since="2019.3">
            <description>The absolute URL of the image that is used as the avatar for a user account. May point to an external service, like Gravatar.</description>
        </members>
        <members name="getFirstDayOfWeeks" since="2019.1.50122">
            <description>First day of week as set in the user's profile settings. 0 is for Sunday, 1 is for Monday, etc.</description>
        </members>
        <members name="getSharedTag">
            <description>Returns a tag with the specified name that is shared with but not owned by the user. If such a tag does not exist, a null value is returned.</description>
        </members>
        <members name="getTag">
            <description>Returns a tag that is visible to the user.</description>
        </members>
        <members name="getTimeZoneId">
            <description>User's time zone id.</description>
        </members>
        <members name="getVisibleName">
            <description>The full name of the user or the login if the full name is not set.</description>
        </members>
        <members name="hasRole">
            <description>Checks whether the user is granted the specified role in the specified project. When the project parameter is not specified, checks whether the user has the specified role in any project.</description>
        </members>
        <members name="isBanned">
            <description>If the user is currently banned, this property is `true`.</description>
        </members>
        <members name="isInGroup">
            <description>Checks whether the user is a member of the specified group.</description>
        </members>
        <members name="notify">
            <description>Sends an email notification to the email address that is set in the user profile.</description>
        </members>
        <members name="sendJabber">
            <description>Sends a notification message over Jabber. Similar to the `notify`
method, the message won't be sent on own changes and corresponding flag unchecked.</description>
        </members>
        <members name="sendMail">
            <description>Sends an email notification to the email address that is set in the user profile. An alias for notify(subject, body, true).</description>
        </members>
        <members name="unvoteIssue">
            <description>Removes a vote on behalf of the user from the issue, if allowed.</description>
        </members>
        <members name="unwatchIssue">
            <description>Removes the current user from the list of watchers for the issue
(remove `Star` tag).</description>
        </members>
        <members name="voteIssue">
            <description>Adds a vote on behalf of the user to the issue, if allowed.</description>
        </members>
        <members name="watchIssue">
            <description>Adds the current user to the issue as a watcher (add `Star` tag).</description>
        </members>
        <members name="findByEmail" since="2018.2.41100">
            <description>Finds users by email.</description>
        </members>
        <members name="findByLogin">
            <description>Finds a user by login.</description>
        </members>
        <members name="findUniqueByEmail" since="2018.2.41100">
            <description>Finds a user by email.</description>
        </members>
        <members name="getCurrent">
            <description>The current (logged in) user.</description>
        </members>
        <members name="getFieldType">
            <description>Field type. Used when defining rule requirements.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="email">
            <description>The email address of the user.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="fullName">
            <description>The full name of the user as seen in their profile.</description>
            <typeRef type="string">
                <cardinality name="1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="login">
            <description>The login of the user.</description>
            <typeRef type="string">
                <cardinality name="1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <description>Represents a user account in YouTrack.</description>
    </type>
    <type xsi:type="class" name="UserGroup" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="getUsers">
            <description>A list of users who are members of the group.</description>
        </members>
        <members name="isAllUsersGroup">
            <description>If the group is the All Users group, this property is `true`.</description>
        </members>
        <members name="isAutoJoin">
            <description>If the auto-join option is enabled for the group, this property is `true`.</description>
        </members>
        <members name="notifyAllUsers">
            <description>Sends an email notification to all of the users who are members of the group.
@example
issue.oldValue('permittedGroup').notifyAllUsers('Visibility has been changed',
  'The visibility group for the issue ' + issue.getId() +
  ' has been changed to ' + permittedGroup.name);</description>
        </members>
        <members name="findByName">
            <description>Finds a group by name.</description>
        </members>
        <members name="getAllUsersGroup">
            <description>The All Users group.</description>
        </members>
        <members name="getFieldType">
            <description>Field type. Used when defining rule requirements.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="addNewUser">
            <description>TODO documentation missing</description>
            <typeRef type="boolean">
                <cardinality name="1"/>
                <myTypeName>boolean</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="allUsersGroup">
            <description>TODO documentation missing</description>
            <typeRef type="boolean">
                <cardinality name="1"/>
                <myTypeName>boolean</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="description">
            <description>The description of the group.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="name">
            <description>The name of the group.</description>
            <typeRef type="string">
                <cardinality name="1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <description>Represents a group of users.</description>
    </type>
    <type xsi:type="class" name="UserProjectCustomField" superClass="ProjectCustomField" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="findValueByLogin">
            <description>Returns the value that matches the specified login in a custom field that stores values as a user type.</description>
        </members>
        <members name="getValues">
            <description>The list of available values for the custom field.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="defaultUsers">
            <description>The default value for the custom field.</description>
            <typeRef type="User">
                <cardinality name="0..*"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <description>Represents a custom field in a project that stores values as a user type.</description>
    </type>
    <type xsi:type="class" name="VcsChange" superClass="AbstractVcsItem" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="getChangesProcessors" since="2018.1.38923">
            <description>The list of change processors that the VCS change can be retrieved from.</description>
        </members>
        <members name="getCreated" since="2018.1.39547">
            <description>The date when the change was applied, as returned by the VCS.</description>
        </members>
        <members name="getDate" since="2018.1.38923">
            <description>The date when the change was applied, as returned by the VCS.
Use `VcsChange.created` instead.
@deprecated 2018.1.39547</description>
        </members>
        <members name="isVisibleTo" since="2020.1.1331">
            <description>Checks whether the specified user has access to view the VCS change.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="fetched" since="2018.1.39547">
            <description>The date when the VCS change was retrieved from the change processor.</description>
            <typeRef type="long">
                <cardinality name="0..1"/>
                <myTypeName>long</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="id" since="2018.1.38923">
            <description>A unique identifier. Used by some CI servers in addition to version.</description>
            <typeRef type="long">
                <cardinality name="1"/>
                <myTypeName>long</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="version" since="2018.1.38923">
            <description>The version number of the change. For a Git-based VCS, the revision hash.</description>
            <typeRef type="string">
                <cardinality name="0..1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <description>Represents a commit that is attached to an issue.</description>
    </type>
    <type xsi:type="class" name="VcsServer" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members xsi:type="Field" readOnly="true" name="url" since="2018.1.38923">
            <description>The URL of the VCS server.</description>
            <typeRef type="string">
                <cardinality name="1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <description>Represents a VCS server.</description>
    </type>
    <type xsi:type="class" name="WatchFolder" superClass="IssueFolder" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="getName">
            <description>The name of the tag or saved search.</description>
        </members>
        <members name="getShareGroup">
            <description>The group of users for whom the tag or saved search is visible.
If the tag or the saved search is only visible to its owner, the value for this property is `null`.
Use `folder.permittedReadUserGroups` and `folder.permittedReadUsers` instead.</description>
        </members>
        <members name="getUpdateShareGroup">
            <description>The group of users who are allowed to update the settings for the tag or saved search.
If the tag or the saved search can only be updated by its owner, the value for this property is `null`.
Use `folder.permittedUpdateUserGroups` and `folder.permittedUpdateUsers` instead.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="permittedReadUserGroups">
            <description>The groups of users for whom the tag or saved search is visible.</description>
            <typeRef type="UserGroup">
                <cardinality name="0..*"/>
                <myTypeName>UserGroup</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="permittedReadUsers">
            <description>The users for whom the tag or saved search is visible.</description>
            <typeRef type="User">
                <cardinality name="0..*"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="permittedUpdateUserGroups">
            <description>The groups of users who are allowed to update the settings for the tag or saved search.</description>
            <typeRef type="UserGroup">
                <cardinality name="0..*"/>
                <myTypeName>UserGroup</myTypeName>
            </typeRef>
        </members>
        <members xsi:type="Field" readOnly="true" name="permittedUpdateUsers">
            <description>The users who are allowed to update the settings for the tag or saved search.</description>
            <typeRef type="User">
                <cardinality name="0..*"/>
                <myTypeName>User</myTypeName>
            </typeRef>
        </members>
        <description>Represents a common ancestor of classes that represent tags and saved searches.</description>
    </type>
    <type xsi:type="class" name="WorkItemType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <members name="findByProject">
            <description>Returns the set of work item types that are available in a project.</description>
        </members>
        <members xsi:type="Field" readOnly="true" name="name">
            <description>The name of the work item type.</description>
            <typeRef type="string">
                <cardinality name="1"/>
                <myTypeName>string</myTypeName>
            </typeRef>
        </members>
        <description>Represents a work type that can be assigned to a work item.</description>
    </type>
    <type xsi:type="class" name="WorkflowUser" superClass="SuperUser" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
    <project name="YouTrack">
        <field readOnly="false" name="Estimation">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Spent time">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystem">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fixed in build">
            <typeRef type="Build">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fix versions">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Due Date">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fall 2018">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="How to">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Customer Support System">
        <field readOnly="false" name="Estimation">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Spent time">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystem">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Date and time">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Helpdesk Management">
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystem">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fixed in build">
            <typeRef type="Build">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fix versions">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Request State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Assignee">
        <field readOnly="false" name="Estimation">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Spent time">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Story points">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Sprint">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Ideal days">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Due Date">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Agila">
        <field readOnly="false" name="Estimation">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Spent time">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fix versions">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Resolution">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Github Integration">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Git Repository Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blog Administrator?">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Existing GitBox Approval">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blogs - Existing Blog Access Level">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystems">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Testcase included">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Project_">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Epic-Theme">
            <typeRef type="EnumField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Git Notification Mailing List">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Github Integrations - Other">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Git Repository Name">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blogs - Admin for blog">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blogs - Username">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Protected Branch">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blogs - Email Address">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="GitHub Options">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Git Repository Import Path">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Docs Text">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="New-TLP-TLPName">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blogs - New Blog Write Access">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blogs - Existing Blog Name">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blog - New Blog PMC">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blog - New Blog Administrators">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blog - Write access">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Bugzilla - List of usernames">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Bugzilla - PMC Name">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Bugzilla - Email Notification Address">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Bugzilla - Project Name">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Bugzilla Id">
            <typeRef type="float">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Initial Confluence Contributors">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Space Name">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Space Description">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="INFRA - Subversion Repository Path">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Space Key">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Environment">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="External issue URL">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Due Date">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Kanban demo">
        <field readOnly="false" name="Kanban State">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Stage">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Vacation Preparations">
        <field readOnly="false" name="Estimation">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Spent time">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Story points">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Sprint">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Ideal days">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Due Date">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Start Date">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Additional requirements">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="CustomVacationField">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="My Project">
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Sprint">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Ideal days">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Story point">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Your project">
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystem">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fixed in build">
            <typeRef type="Build">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fix versions">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Request State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Software Project 1">
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Sprint">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Ideal days">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Story point">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="software project 2">
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystem">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fixed in build">
            <typeRef type="Build">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fix versions">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Request State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Dating app MVP">
        <field readOnly="false" name="Estimation">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Spent time">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Sprint">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Software release">
            <typeRef type="ProjectVersion">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Stages">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Epic status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Reviewer">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assigned">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Ideal days">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Story point">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Due Date">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Last message related emails">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="All related emails">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Additional requirements">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Создание продукта">
        <field readOnly="false" name="Spent time">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Estimation">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Sprint">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Ideal days">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Story point">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Due Date">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="My Project TEST">
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystem">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fixed in build">
            <typeRef type="Build">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fix versions">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Request State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Influencers">
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystem">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fixed in build">
            <typeRef type="Build">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fix versions">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Request State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Private Project">
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystem">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fixed in build">
            <typeRef type="Build">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fix versions">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Request State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Test Project">
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystem">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fixed in build">
            <typeRef type="Build">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fix versions">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Request State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Test Project WF">
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystem">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fixed in build">
            <typeRef type="Build">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fix versions">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Request State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="test123">
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystem">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fixed in build">
            <typeRef type="Build">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fix versions">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Request State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="test239">
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystem">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fixed in build">
            <typeRef type="Build">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fix versions">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Request State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="assignee2">
            <typeRef type="User">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Создание прототипа приложения">
        <field readOnly="false" name="Estimation">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Spent time">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Sprint">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Версия ПО">
            <typeRef type="ProjectVersion">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Ideal days">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Story point">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Due Date">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Ожидаемое поведение системы">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Education Course">
        <field readOnly="false" name="Estimation">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Spent time">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Kanban State">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Stage">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Pomodoro state">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Pomodoro interruption">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Urgent email">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Pomodoro countdown">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Education">
        <field readOnly="false" name="Estimation">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Spent time">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Estimation2">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee role">
            <typeRef type="EnumField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Due Date">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Start Date">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Complete %">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Last message related emails">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="All related emails">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Test Management">
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Test Mode">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Category">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Test Flow">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Application">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Test Category">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Total number of test cases">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Number of passed test cases">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Number of failed test cases">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Testing Requirements">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Test Data">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Expected Result">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Related Bug">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="TMS ISSUE TRACKER">
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystem">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fixed in build">
            <typeRef type="Build">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fix versions">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Request State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <project name="Messenger">
        <field readOnly="false" name="Estimation">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Spent time">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Sprints">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Ideal days">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Original estimation">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Story points_0">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </project>
    <fieldPrototypes>
        <field readOnly="false" name="Additional requirements">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="All related emails">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Application">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assigned">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Assignee role">
            <typeRef type="EnumField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="assignee2">
            <typeRef type="User">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blog - New Blog Administrators">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blog - New Blog PMC">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blog - Write access">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blog Administrator?">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blogs - Admin for blog">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blogs - Email Address">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blogs - Existing Blog Access Level">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blogs - Existing Blog Name">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blogs - New Blog Write Access">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Blogs - Username">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Bugzilla - Email Notification Address">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Bugzilla - List of usernames">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Bugzilla - PMC Name">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Bugzilla - Project Name">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Bugzilla Id">
            <typeRef type="float">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Category">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Complete %">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="CustomVacationField">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Date and time">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Docs Text">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="DP">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Due Date">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Environment">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Epic status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Epic-Theme">
            <typeRef type="EnumField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Estimation">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Estimation2">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Execution Status">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Existing GitBox Approval">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Expected Result">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="External issue URL">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fall 2018">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fix versions">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Fixed in build">
            <typeRef type="Build">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Git Notification Mailing List">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Git Repository Import Path">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Git Repository Name">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Git Repository Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Github Integration">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Github Integrations - Other">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="GitHub Options">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="How to">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Ideal days">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Information">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="INFRA - Subversion Repository Path">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Initial Confluence Contributors">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Kanban State">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Last message related emails">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Leonid">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Leonid.Zalog">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="New-TLP-TLPName">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Number of failed test cases">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Number of passed test cases">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Original estimation">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Pomodoro countdown">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Pomodoro interruption">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Pomodoro state">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Priority">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Project_">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Protected Branch">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Related Bug">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Request State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Resolution">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Reviewer">
            <typeRef type="User">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Software release">
            <typeRef type="ProjectVersion">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Space Description">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Space Key">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Space Name">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Spent time">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Sprint">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Sprints">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Stage">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Stages">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Start Date">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="State">
            <typeRef type="State">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Status">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Story point">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Story points">
            <typeRef type="period">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Story points_0">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystem">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Subsystems">
            <typeRef type="OwnedField">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="tes34">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="test">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Test Category">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Test Data">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Test Flow">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Test Mode">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="test12">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Testcase included">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Testing Requirements">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Timer">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Timer time">
            <typeRef type="instant">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Total number of test cases">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Type">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="UpdateFromWF">
            <typeRef type="EnumField">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Urgent email">
            <typeRef type="int">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="UserList">
            <typeRef type="User">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Version">
            <typeRef type="ProjectVersion">
                <cardinality name="0..*"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Версия ПО">
            <typeRef type="ProjectVersion">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <field readOnly="false" name="Ожидаемое поведение системы">
            <typeRef type="string">
                <cardinality name="0..1"/>
            </typeRef>
        </field>
        <link name="Relates" outward="relates to"/>
        <link name="Depend" outward="is required for" inward="depends on"/>
        <link name="Duplicate" outward="is duplicated by" inward="duplicates"/>
        <link name="Subtask" outward="parent for" inward="subtask of"/>
        <link name="Blocked" outward="blocked"/>
        <link name="Blocker" outward="blocks" inward="is blocked by"/>
        <link name="Child-Issue" outward="is a parent of" inward="is a child of"/>
        <link name="Cloners" outward="is a clone of" inward="is cloned by"/>
        <link name="Container" outward="contains" inward="is contained by"/>
        <link name="Dependency" outward="dependency"/>
        <link name="Dependent" outward="dependent"/>
        <link name="Incorporates" outward="incorporates" inward="is part of"/>
        <link name="Parent Feature" outward="parent feature"/>
        <link name="Problem-Incident" outward="causes" inward="is caused by"/>
        <link name="Reference" outward="relates to_" inward="is related to"/>
        <link name="Regression" outward="breaks" inward="is broken by"/>
        <link name="Required" outward="requires" inward="is required by"/>
        <link name="Supercedes" outward="supercedes" inward="is superceded by"/>
        <link name="Dependent_" outward="depends upon" inward="is depended upon by"/>
        <link name="testwer" outward="testwer" inward="werrwe"/>
        <link name="Awesome" outward="awesome for" inward="awesomed by"/>
        <link name="Problem-Incident_" outward="causes_" inward="is caused by_"/>
        <link name="Problem-Incident__" outward="causes__" inward="is caused by__"/>
        <link name="Problem-Incident___" outward="causes___" inward="is caused by___"/>
        <link name="Problem-Incident____" outward="causes____" inward="is caused by____"/>
        <link name="Problem-Incident_____" outward="causes_____" inward="is caused by_____"/>
        <link name="Problem-Incident______" outward="causes______" inward="is caused by______"/>
        <link name="Problem-Incident_______" outward="causes_______" inward="is caused by_______"/>
        <link name="Refers" outward="refer to"/>
        <link name="Test Run Reference" outward="Child Test Cases"/>
        <link name="Execution" outward="Assigned test case or test suite" inward="Execution"/>
        <link name="Related Bug" outward="Related bug" inward="Related Test Run"/>
    </fieldPrototypes>
    <group name="All Users"/>
    <group name="Agila Admins"/>
    <group name="Agila Team"/>
    <group name="Assignee Team"/>
    <group name="Backlog test-team"/>
    <group name="Clone of 4TCTest2 Team"/>
    <group name="Clone of Agila (1) Team"/>
    <group name="Customer Support System Team"/>
    <group name="Dating app MVP Team"/>
    <group name="Development Sample-team"/>
    <group name="Education Course Team"/>
    <group name="Education Team"/>
    <group name="Gannt-team"/>
    <group name="GitLabTest Team"/>
    <group name="Group Client"/>
    <group name="Helpdesk Management Team"/>
    <group name="Helpdesk Management-team"/>
    <group name="Influencers"/>
    <group name="Influencers Team"/>
    <group name="Kanban demo Team"/>
    <group name="MVP testers team"/>
    <group name="Messenger Team"/>
    <group name="Mindshare"/>
    <group name="My Bank-team"/>
    <group name="My Project TEST Team"/>
    <group name="My Project Team"/>
    <group name="New Users"/>
    <group name="Playground-team"/>
    <group name="Private Project Team"/>
    <group name="Project creator"/>
    <group name="Registered Users"/>
    <group name="Reporters"/>
    <group name="SND Scrum-team"/>
    <group name="Sc-team"/>
    <group name="Scrum Cats-team"/>
    <group name="Scrum Youtrack-team"/>
    <group name="Scrum test-team"/>
    <group name="Software Project 1 Team"/>
    <group name="T1-team"/>
    <group name="TMS ISSUE TRACKER Team"/>
    <group name="Test Management Team"/>
    <group name="Test Project Team"/>
    <group name="Test Project WF Team"/>
    <group name="ToDeleteTest11 Team"/>
    <group name="Vacation Preparations Team"/>
    <group name="YouTrack Team"/>
    <group name="YouTrack for beginners-team"/>
    <group name="Your project Team"/>
    <group name="eeee"/>
    <group name="group1"/>
    <group name="ijhwejfhewf Team"/>
    <group name="software project 2 Team"/>
    <group name="test123 Team"/>
    <group name="test239"/>
    <group name="test239 Team"/>
    <group name="youtrack"/>
    <group name="Создание продукта Team"/>
    <group name="Создание прототипа приложения Team"/>
    <group name="Создание прототипа приложения Team Group"/>
</instance>